Construct the Hamiltonian operator...
Create basis...
l= 1
New partition occupations:
nImp,nVal,nCon = 6,0,0
l= 2
New partition occupations:
nImp,nVal,nCon = 8,10,0
New partition occupations:
nImp,nVal,nCon = 9,9,0
New partition occupations:
nImp,nVal,nCon = 10,8,0
#basis states = 190
Create Hamiltonian matrix...
Filling the Hamiltonian...
10% done
20% done
30% done
40% done
50% done
60% done
70% done
80% done
90% done
<#Hamiltonian elements/column> = 5
Diagonalize the Hamiltonian...
190 eigenstates found!
<E-E0> = 0.000
<N(3d)> = 8.135
<N(egDn)> = 1.078
<N(egUp)> = 1.077
<N(t2gDn)> = 2.990
<N(t2gUp)> = 2.990
<Lz(3d)> = -0.000
<Sz(3d)> = -0.000
<L^2(3d)> = 11.189
<S^2(3d)> = 1.830
E0 = -756.42
  i  E-E0  N(3d) N(egDn) N(egUp) N(t2gDn) N(t2gUp) Lz(3d) Sz(3d) L^2(3d) S^2(3d) L^2(3d+B) S^2(3d+B)
  0  0.000  8.14  1.998   0.157    2.992   2.988   -0.38  -0.92   11.19    1.83    12.00     2.00
  1  0.000  8.14  1.078   1.078    2.990   2.990   -0.00  -0.00   11.19    1.83    12.00     2.00
  2  0.000  8.14  0.157   1.998    2.988   2.992    0.38   0.92   11.19    1.83    12.00     2.00
  3  0.832  8.10  1.541   1.541    2.509   2.508   -0.00  -0.00   11.39    1.86    11.98     1.98
  4  0.832  8.10  1.541   1.541    2.508   2.508    0.00  -0.00   11.39    1.86    11.98     1.98
  5  0.858  8.10  1.769   1.316    2.733   2.281    0.02  -0.45   11.41    1.88    12.00     2.00
  6  0.858  8.10  1.542   1.543    2.507   2.507    0.00   0.00   11.41    1.88    12.00     2.00
  7  0.858  8.10  1.316   1.769    2.281   2.733   -0.02   0.45   11.41    1.88    12.00     2.00
  8  0.921  8.10  1.752   1.312    2.766   2.270   -0.11  -0.47   11.38    1.87    11.98     1.99
  9  0.921  8.10  1.532   1.532    2.518   2.518    0.00  -0.00   11.38    1.87    11.98     1.99
 10  0.921  8.10  1.312   1.752    2.270   2.766    0.11   0.47   11.38    1.87    11.98     1.99
 11  0.943  8.10  1.535   1.536    2.514   2.515   -0.00   0.00   11.40    1.88    12.00     2.00
 12  1.366  8.08  1.802   1.802    2.238   2.238   -0.00  -0.00   11.08    1.89    11.46     1.99
 13  1.446  8.08  1.870   1.713    2.629   1.870    0.89  -0.46   10.99    1.90    11.36     2.00
 14  1.446  8.08  1.792   1.792    2.249   2.249    0.00   0.00   10.99    1.90    11.36     2.00
 15  1.446  8.08  1.713   1.870    1.870   2.629   -0.89   0.46   10.99    1.90    11.36     2.00
 16  1.498  8.13  1.565   1.565    2.498   2.498    0.00  -0.00    9.71    1.33    10.23     1.36
 17  1.498  8.13  1.565   1.565    2.498   2.498    0.00   0.00    9.71    1.33    10.23     1.36
 18  1.564  8.09  1.883   1.668    2.622   1.914    0.37  -0.46   10.76    1.89    11.13     2.00
 19  1.564  8.09  1.776   1.776    2.267   2.268   -0.00   0.00   10.76    1.89    11.13     2.00
 20  1.564  8.09  1.668   1.883    1.913   2.622   -0.37   0.46   10.76    1.89    11.13     2.00
 21  1.750  8.17  1.348   1.348    2.739   2.739   -0.00   0.00    9.80    0.73    10.69     0.66
 22  1.750  8.17  1.348   1.348    2.739   2.739   -0.00   0.00    9.80    0.73    10.69     0.66
 23  2.522  8.15  1.624   1.621    2.527   2.375   -0.42  -0.08    6.86    0.40     7.21     0.34
 24  2.522  8.15  1.623   1.623    2.451   2.451   -0.00  -0.00    6.86    0.40     7.21     0.34
 25  2.522  8.15  1.621   1.624    2.375   2.527    0.42   0.08    6.86    0.40     7.21     0.34
 26  2.603  8.26  1.284   1.284    2.848   2.848    0.00  -0.00   15.27    0.22    17.77     0.04
 27  2.838  8.13  1.771   1.771    2.293   2.293   -0.00  -0.00    3.49    1.83     3.12     1.99
 28  2.838  8.13  1.771   1.771    2.293   2.293    0.00  -0.00    3.49    1.83     3.12     1.99
 29  2.891  8.13  1.832   1.663    2.625   2.015   -0.31  -0.39    4.41    1.55     4.22     1.66
Create XAS spectra...
#polarization = 3
#relevant eigenstates = 3
#mesh points = 3000
Save spectra to disk...

Create 3d IPS spectra...
#spinOrbitals = 10
#relevant eigenstates = 3
#mesh points = 3000
Save spectra to disk...

Create 3d PS spectra...
#spinOrbitals = 10
#relevant eigenstates = 3
#mesh points = 3000
Save spectra to disk...

Slater determinants and weights
Eigenstate 0
Number of Slater determinants: 38
Highest weights:
[]
Corresponding Slater determinantss:
[]

Eigenstate 1
Number of Slater determinants: 42
Highest weights:
[]
Corresponding Slater determinantss:
[]

Eigenstate 2
Number of Slater determinants: 38
Highest weights:
[]
Corresponding Slater determinantss:
[]

Density matrix (in cubic basis):
Eigenstate 0
#element=38

Eigenstate 1
#element=42

Eigenstate 2
#element=38

Script finished.
         1453903773 function calls (1453891331 primitive calls) in 959.200 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001  959.200  959.200 <string>:1(<module>)
        1    0.005    0.005  959.199  959.199 impurityModel.py:19(main)
     1639   32.463    0.020  952.191    0.581 impurityModel.py:1643(applyOp)
        3    0.044    0.015  952.081  317.360 impurityModel.py:2058(getSpectra)
       69    0.124    0.002  952.007   13.797 impurityModel.py:2113(getGreen)
  2923728  270.306    0.000  554.730    0.000 impurityModel.py:434(c)
  2923728  132.010    0.000  303.975    0.000 impurityModel.py:463(cd)
297268284  154.982    0.000  276.684    0.000 impurityModel.py:297(binary_search)
181479721   94.043    0.000  166.732    0.000 impurityModel.py:310(binary_search_bigger)
478748005  158.660    0.000  158.660    0.000 {_bisect.bisect_left}
  1517908   61.438    0.000   62.887    0.000 impurityModel.py:343(addToFirst)
478842244   35.741    0.000   35.741    0.000 {len}
  7571025   14.562    0.000   14.562    0.000 {method 'items' of 'dict' objects}
        1    0.002    0.002    3.234    3.234 impurityModel.py:1585(printExpValues)
        1    0.004    0.004    2.353    2.353 impurityModel.py:1931(getHamiltonianMatrix)
       33    0.103    0.003    1.801    0.055 impurityModel.py:1139(getEgT2gOccupation)
     2691    1.063    0.000    1.081    0.000 impurityModel.py:2017(add)
        1    0.005    0.005    0.986    0.986 impurityModel.py:1760(getHamiltonianOperator)
     2054    0.010    0.000    0.870    0.000 impurityModel.py:612(gauntC)
        1    0.000    0.000    0.847    0.847 impurityModel.py:782(get2p3dSlaterCondonUop)
        6    0.007    0.001    0.845    0.141 impurityModel.py:718(getUop)
     1606    0.003    0.000    0.838    0.001 impurityModel.py:620(getU)
     2054    0.032    0.000    0.763    0.000 wigner.py:550(gaunt)
     9930    0.647    0.000    0.656    0.000 impurityModel.py:324(inner)
    71616    0.259    0.000    0.531    0.000 impurityModel.py:855(i2c)
    42528    0.284    0.000    0.498    0.000 impurityModel.py:828(c2i)
      964    0.011    0.000    0.498    0.001 evalf.py:1363(evalf)
11580/964    0.063    0.000    0.472    0.000 evalf.py:1303(evalf)
      944    0.040    0.000    0.465    0.000 evalf.py:546(evalf_mul)
     1311    0.377    0.000    0.377    0.000 impurityModel.py:2161(<dictcomp>)
       30    0.000    0.000    0.345    0.011 impurityModel.py:986(getLsqr3dWithBath)
       33    0.025    0.001    0.297    0.009 impurityModel.py:902(getLz3d)
       33    0.027    0.001    0.294    0.009 impurityModel.py:924(getSz3d)
        1    0.000    0.000    0.292    0.292 impurityModel.py:1605(printThermalExpValues)
       30    0.000    0.000    0.281    0.009 impurityModel.py:946(getSsqr3dWithBath)
9915/9683    0.017    0.000    0.258    0.000 decorators.py:84(__sympifyit_wrapper)
3878/3474    0.016    0.000    0.230    0.000 assumptions.py:242(getit)
   114151    0.130    0.000    0.218    0.000 collections.py:117(keys)
   668352    0.216    0.000    0.216    0.000 {range}
       33    0.001    0.000    0.185    0.006 impurityModel.py:1006(getLsqr3d)
     5718    0.084    0.000    0.173    0.000 facts.py:503(deduce_all_facts)
     1758    0.005    0.000    0.172    0.000 impurityModel.py:2046(norm2)
       33    0.017    0.001    0.171    0.005 impurityModel.py:1026(getTraceDensityMatrix)
     1639    0.146    0.000    0.165    0.000 impurityModel.py:1757(<dictcomp>)
     2830    0.004    0.000    0.165    0.000 assumptions.py:226(copy)
     1758    0.040    0.000    0.164    0.000 {sum}
     2830    0.010    0.000    0.160    0.000 assumptions.py:215(__init__)
       30    0.006    0.000    0.157    0.005 impurityModel.py:1185(applySz3dWithBath)
       30    0.005    0.000    0.155    0.005 impurityModel.py:1249(applyLz3dWithBath)
       33    0.000    0.000    0.148    0.004 impurityModel.py:966(getSsqr3d)
5723/5719    0.008    0.000    0.144    0.000 decorators.py:122(binary_op_wrapper)
   183187    0.105    0.000    0.124    0.000 impurityModel.py:2056(<genexpr>)
     3420    0.017    0.000    0.118    0.000 evalf.py:660(evalf_pow)
   429940    0.109    0.000    0.109    0.000 collections.py:90(__iter__)
       30    0.004    0.000    0.094    0.003 impurityModel.py:1382(applyLplus3dWithBath)
        3    0.068    0.023    0.093    0.031 npyio.py:969(savetxt)
       30    0.003    0.000    0.092    0.003 impurityModel.py:1518(applyLminus3dWithBath)
  304/241    0.004    0.000    0.091    0.000 operations.py:28(__new__)
       10    0.086    0.009    0.086    0.009 {numpy.core.multiarray.dot}
       33    0.003    0.000    0.083    0.003 impurityModel.py:1284(applyLz3d)
       33    0.003    0.000    0.083    0.003 impurityModel.py:1220(applySz3d)
  215/193    0.014    0.000    0.080    0.000 mul.py:97(flatten)
     9952    0.030    0.000    0.068    0.000 sympify.py:76(sympify)
     1911    0.011    0.000    0.068    0.000 expr.py:142(__rmul__)
      944    0.005    0.000    0.063    0.000 miscellaneous.py:64(sqrt)
    29125    0.042    0.000    0.063    0.000 collections.py:125(items)
       30    0.002    0.000    0.060    0.002 impurityModel.py:1449(applySminus3dWithBath)
        3    0.010    0.003    0.060    0.020 impurityModel.py:1094(getDensityMatrixCubic)
       30    0.002    0.000    0.059    0.002 impurityModel.py:1313(applySplus3dWithBath)
   147/31    0.002    0.000    0.055    0.002 power.py:244(__new__)
       31    0.001    0.000    0.054    0.002 mul.py:628(_eval_power)
3007/2910    0.011    0.000    0.050    0.000 assumptions.py:254(_ask)
       33    0.002    0.000    0.050    0.002 impurityModel.py:1555(applyLminus3d)
        3    0.002    0.001    0.048    0.016 impurityModel.py:1052(getDensityMatrix)
       30    0.001    0.000    0.048    0.002 power.py:836(_eval_expand_power_base)
       33    0.002    0.000    0.048    0.001 impurityModel.py:1419(applyLplus3d)
27064/27034    0.012    0.000    0.046    0.000 {all}
     4672    0.003    0.000    0.045    0.000 impurityModel.py:1890(<genexpr>)
     2863    0.009    0.000    0.045    0.000 expr.py:137(__mul__)
   408610    0.044    0.000    0.044    0.000 {abs}
    78165    0.032    0.000    0.040    0.000 facts.py:537(<genexpr>)
     3706    0.009    0.000    0.039    0.000 numbers.py:1088(_new)
      190    0.033    0.000    0.037    0.000 impurityModel.py:129(<dictcomp>)
        3    0.000    0.000    0.036    0.012 impurityModel.py:1893(getDipoleOperator)
     2945    0.014    0.000    0.032    0.000 numbers.py:1636(__div__)
       33    0.001    0.000    0.031    0.001 impurityModel.py:1487(applySminus3d)
       33    0.001    0.000    0.030    0.001 impurityModel.py:1351(applySplus3d)
     4650    0.025    0.000    0.030    0.000 numbers.py:80(mpf_norm)
     3648    0.005    0.000    0.029    0.000 evalf.py:1264(<lambda>)
    53/30    0.002    0.000    0.028    0.001 numbers.py:2216(_eval_power)
    39589    0.027    0.000    0.027    0.000 facts.py:486(_tell)
     1888    0.005    0.000    0.025    0.000 libelefun.py:318(mpf_pow)
     3648    0.006    0.000    0.024    0.000 libmpf.py:466(from_rational)
      944    0.010    0.000    0.023    0.000 numbers.py:954(__new__)
     5536    0.016    0.000    0.022    0.000 libmpf.py:925(mpf_div)
      944    0.006    0.000    0.022    0.000 expr.py:179(__rdiv__)
     3598    0.008    0.000    0.022    0.000 evalf.py:114(pure_complex)
     3420    0.014    0.000    0.021    0.000 libmpf.py:1339(mpf_sqrt)
     1820    0.006    0.000    0.020    0.000 numbers.py:1267(__eq__)
    38071    0.019    0.000    0.019    0.000 {isinstance}
     8551    0.010    0.000    0.019    0.000 numbers.py:739(__hash__)
        3    0.019    0.006    0.019    0.006 {open}
     3422    0.012    0.000    0.017    0.000 numbers.py:162(igcd)
     3836    0.005    0.000    0.017    0.000 numbers.py:1367(__hash__)
     2972    0.003    0.000    0.016    0.000 sympify.py:375(_sympify)
     9298    0.010    0.000    0.015    0.000 numbers.py:2008(__new__)
        1    0.015    0.015    0.015    0.015 linalg.py:1141(eigh)
16718/16389    0.011    0.000    0.014    0.000 basic.py:121(__hash__)
     4510    0.006    0.000    0.013    0.000 numbers.py:1838(__hash__)
    86667    0.013    0.000    0.013    0.000 {method 'get' of 'dict' objects}
      944    0.002    0.000    0.012    0.000 numbers.py:610(__float__)
     1061    0.004    0.000    0.012    0.000 mul.py:767(as_coeff_Mul)
     5954    0.008    0.000    0.011    0.000 basic.py:96(__new__)
     1888    0.002    0.000    0.011    0.000 evalf.py:1269(<lambda>)
     3430    0.004    0.000    0.011    0.000 libmpf.py:601(mpf_lt)
    15716    0.010    0.000    0.010    0.000 {hasattr}
     1888    0.005    0.000    0.009    0.000 libelefun.py:114(f)
    88/45    0.001    0.000    0.008    0.000 factor_.py:265(perfect_power)
    13106    0.008    0.000    0.008    0.000 {gmpy2._mpmath_normalize}
      944    0.002    0.000    0.008    0.000 numbers.py:1124(_as_mpf_val)
      297    0.003    0.000    0.007    0.000 basic.py:1695(_exec_constructor_postprocessors)
  453/408    0.002    0.000    0.007    0.000 numbers.py:2121(__mul__)
     8902    0.006    0.000    0.007    0.000 libmpf.py:330(from_int)
      836    0.002    0.000    0.007    0.000 operations.py:68(_new_rawargs)
     1908    0.005    0.000    0.007    0.000 libmpf.py:64(dps_to_prec)
       39    0.000    0.000    0.006    0.000 function.py:418(__new__)
     3430    0.005    0.000    0.006    0.000 libmpf.py:549(mpf_cmp)
     9003    0.006    0.000    0.006    0.000 {method 'write' of 'file' objects}
       60    0.000    0.000    0.006    0.000 iterables.py:624(sift)
       60    0.000    0.000    0.006    0.000 power.py:872(pred)
       10    0.000    0.000    0.006    0.001 expr.py:780(_eval_is_negative)
     1052    0.003    0.000    0.005    0.000 operations.py:54(_from_args)
      430    0.002    0.000    0.005    0.000 mul.py:379(_gather)
       94    0.001    0.000    0.005    0.000 generate.py:598(primerange)
      944    0.003    0.000    0.005    0.000 libmpf.py:410(from_float)
      139    0.001    0.000    0.004    0.000 numbers.py:1622(__mul__)
     6125    0.004    0.000    0.004    0.000 {method 'update' of 'set' objects}
     1542    0.002    0.000    0.004    0.000 evalf.py:1265(<lambda>)
     5970    0.004    0.000    0.004    0.000 {gmpy2._mpmath_create}
     5530    0.003    0.000    0.004    0.000 numbers.py:2205(__hash__)
      215    0.000    0.000    0.004    0.000 mul.py:32(_mulsort)
     9252    0.004    0.000    0.004    0.000 {max}
    11640    0.004    0.000    0.004    0.000 basic.py:630(func)
       20    0.000    0.000    0.004    0.000 expr.py:1743(as_real_imag)
      215    0.001    0.000    0.004    0.000 {method 'sort' of 'list' objects}
      382    0.001    0.000    0.004    0.000 {map}
     6072    0.003    0.000    0.004    0.000 compatibility.py:348(as_int)
     2768    0.002    0.000    0.004    0.000 assumptions.py:229(generator)
        4    0.003    0.001    0.003    0.001 impurityModel.py:758(addOps)
       39    0.000    0.000    0.003    0.000 function.py:181(nargs)
      990    0.003    0.000    0.003    0.000 numbers.py:1583(__add__)
      948    0.002    0.000    0.003    0.000 evalf.py:34(bitcount)
     1303    0.002    0.000    0.003    0.000 numbers.py:3416(__hash__)
       92    0.000    0.000    0.003    0.000 functools.py:86(__lt__)
     2654    0.003    0.000    0.003    0.000 numbers.py:1138(_eval_is_infinite)
     1758    0.003    0.000    0.003    0.000 {method 'values' of 'dict' objects}
       30    0.000    0.000    0.003    0.000 mul.py:1221(_eval_is_imaginary)
       39    0.001    0.000    0.003    0.000 sets.py:1519(__new__)
     3776    0.003    0.000    0.003    0.000 {divmod}
     5954    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x104617f38}
   184/92    0.001    0.000    0.003    0.000 basic.py:170(compare)
       33    0.002    0.000    0.003    0.000 quantyt.py:621(thermal_average)
     3113    0.002    0.000    0.003    0.000 numbers.py:2159(__eq__)
7766/7653    0.002    0.000    0.003    0.000 {hash}
      944    0.001    0.000    0.003    0.000 libmpf.py:429(to_float)
     4934    0.003    0.000    0.003    0.000 {math.sqrt}
       43    0.000    0.000    0.003    0.000 numbers.py:1841(factors)
       62    0.000    0.000    0.002    0.000 generate.py:138(primerange)
       37    0.002    0.000    0.002    0.000 unitarytransform.py:176(get_spherical_2_cubic_matrix)
     7613    0.002    0.000    0.002    0.000 basic.py:656(args)
  200/124    0.001    0.000    0.002    0.000 numbers.py:1480(__new__)
      129    0.002    0.000    0.002    0.000 factor_.py:806(factorint)
     1888    0.002    0.000    0.002    0.000 libelefun.py:94(g)
       43    0.001    0.000    0.002    0.000 factor_.py:1217(factorrat)
      944    0.002    0.000    0.002    0.000 wigner.py:45(_calc_factlist)
       88    0.000    0.000    0.002    0.000 numbers.py:1185(__mul__)
     1951    0.002    0.000    0.002    0.000 {gmpy2.isqrt_rem}
      493    0.002    0.000    0.002    0.000 {numpy.core.multiarray.zeros}
       31    0.000    0.000    0.002    0.000 mul.py:1142(_eval_is_zero)
       39    0.000    0.000    0.002    0.000 sets.py:553(__contains__)
     4593    0.002    0.000    0.002    0.000 {min}
     6444    0.002    0.000    0.002    0.000 {gmpy2.bit_length}
      598    0.002    0.000    0.002    0.000 {method 'mro' of 'type' objects}
     1810    0.002    0.000    0.002    0.000 libmpf.py:512(mpf_eq)
     5598    0.002    0.000    0.002    0.000 {gmpy2.mpz}
        1    0.001    0.001    0.002    0.002 impurityModel.py:1949(getBasis)
       39    0.000    0.000    0.002    0.000 sets.py:269(contains)
      119    0.000    0.000    0.002    0.000 numbers.py:2132(__rmul__)
     2854    0.002    0.000    0.002    0.000 {method 'copy' of 'dict' objects}
       78    0.001    0.000    0.002    0.000 compatibility.py:562(ordered)
     1888    0.001    0.000    0.001    0.000 evalf.py:81(fastlog)
     3430    0.001    0.000    0.001    0.000 libmpf.py:667(mpf_sign)
     1533    0.001    0.000    0.001    0.000 {gmpy2.isqrt}
       43    0.000    0.000    0.001    0.000 factor_.py:1281(primefactors)
      944    0.001    0.000    0.001    0.000 {math.ldexp}
     2654    0.001    0.000    0.001    0.000 expr.py:2995(as_coeff_Add)
       30    0.000    0.000    0.001    0.000 numbers.py:667(__mul__)
       39    0.000    0.000    0.001    0.000 sets.py:1589(_contains)
     1908    0.001    0.000    0.001    0.000 {round}
      542    0.000    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
       39    0.001    0.000    0.001    0.000 relational.py:305(__new__)
       78    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
      598    0.001    0.000    0.001    0.000 basic.py:1714(<genexpr>)
       46    0.001    0.000    0.001    0.000 {numpy.core.multiarray.array}
      368    0.001    0.000    0.001    0.000 core.py:73(__cmp__)
      944    0.001    0.000    0.001    0.000 {math.frexp}
      119    0.000    0.000    0.001    0.000 numbers.py:3396(__ne__)
       10    0.000    0.000    0.001    0.000 numbers.py:1333(__lt__)
       39    0.000    0.000    0.001    0.000 function.py:235(__new__)
     1898    0.001    0.000    0.001    0.000 numbers.py:1109(_hashable_content)
     3061    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
      104    0.000    0.000    0.001    0.000 basic.py:297(__eq__)
      184    0.000    0.000    0.001    0.000 core.py:101(__gt__)
      184    0.000    0.000    0.001    0.000 core.py:96(__lt__)
      119    0.000    0.000    0.001    0.000 numbers.py:3384(__eq__)
       98    0.000    0.000    0.001    0.000 power.py:30(integer_nthroot)
     1732    0.001    0.000    0.001    0.000 expr.py:2991(as_coeff_Mul)
        1    0.000    0.000    0.001    0.001 fromnumeric.py:1490(nonzero)
       36    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.001    0.001    0.001    0.001 {method 'nonzero' of 'numpy.ndarray' objects}
        3    0.001    0.000    0.001    0.000 {method 'close' of 'file' objects}
      392    0.000    0.000    0.001    0.000 power.py:763(as_base_exp)
      114    0.000    0.000    0.001    0.000 operations.py:343(make_args)
      195    0.000    0.000    0.001    0.000 numbers.py:2874(__hash__)
       12    0.000    0.000    0.001    0.000 numbers.py:2326(_eval_is_composite)
      944    0.000    0.000    0.000    0.000 numbers.py:1902(as_coeff_Add)
       57    0.000    0.000    0.000    0.000 random.py:277(shuffle)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:1743(sum)
      350    0.000    0.000    0.000    0.000 collections.py:71(__setitem__)
       33    0.000    0.000    0.000    0.000 numeric.py:86(zeros_like)
     1179    0.000    0.000    0.000    0.000 numbers.py:2546(__nonzero__)
        3    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       29    0.000    0.000    0.000    0.000 generate.py:245(search)
       50    0.000    0.000    0.000    0.000 numbers.py:1745(__eq__)
       40    0.000    0.000    0.000    0.000 factor_.py:705(_factorint_small)
      272    0.000    0.000    0.000    0.000 {sorted}
       33    0.000    0.000    0.000    0.000 fromnumeric.py:2300(amin)
       13    0.000    0.000    0.000    0.000 collections.py:50(__init__)
      992    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      149    0.000    0.000    0.000    0.000 {zip}
       88    0.000    0.000    0.000    0.000 libmpf.py:825(gmpy_mpf_mul)
       10    0.000    0.000    0.000    0.000 basic.py:583(is_comparable)
       31    0.000    0.000    0.000    0.000 power.py:472(_eval_is_zero)
       44    0.000    0.000    0.000    0.000 numbers.py:606(_as_mpf_op)
    39/35    0.000    0.000    0.000    0.000 factor_.py:194(multiplicity)
       33    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
       66    0.000    0.000    0.000    0.000 numbers.py:2092(__radd__)
    61/31    0.000    0.000    0.000    0.000 expr.py:366(is_number)
      849    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       30    0.000    0.000    0.000    0.000 mul.py:1179(_eval_real_imag)
       61    0.000    0.000    0.000    0.000 expr.py:1126(args_cnc)
        2    0.000    0.000    0.000    0.000 impurityModel.py:812(getSOCop)
      368    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      119    0.000    0.000    0.000    0.000 numbers.py:2166(__ne__)
      598    0.000    0.000    0.000    0.000 {built-in method from_iterable}
       64    0.000    0.000    0.000    0.000 numbers.py:2001(_as_mpf_val)
       39    0.000    0.000    0.000    0.000 sets.py:53(_infimum_key)
       78    0.000    0.000    0.000    0.000 numbers.py:214(igcd2)
      575    0.000    0.000    0.000    0.000 basic.py:130(_hashable_content)
       58    0.000    0.000    0.000    0.000 primetest.py:426(isprime)
       15    0.000    0.000    0.000    0.000 numbers.py:2321(_eval_is_prime)
       10    0.000    0.000    0.000    0.000 numbers.py:603(_eval_evalf)
       71    0.000    0.000    0.000    0.000 factor_.py:156(trailing)
      2/1    0.000    0.000    0.000    0.000 numbers.py:1684(_eval_power)
       73    0.000    0.000    0.000    0.000 fromnumeric.py:1574(shape)
       12    0.000    0.000    0.000    0.000 numbers.py:2169(__gt__)
   183/93    0.000    0.000    0.000    0.000 expr.py:416(<genexpr>)
      214    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      5/2    0.000    0.000    0.000    0.000 expr.py:152(__pow__)
       88    0.000    0.000    0.000    0.000 {math.log}
      5/2    0.000    0.000    0.000    0.000 expr.py:147(_pow)
      263    0.000    0.000    0.000    0.000 functools.py:84(__init__)
       46    0.000    0.000    0.000    0.000 generate.py:479(nextprime)
       11    0.000    0.000    0.000    0.000 impurityModel.py:101(<genexpr>)
       12    0.000    0.000    0.000    0.000 numeric.py:414(asarray)
       33    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
       92    0.000    0.000    0.000    0.000 power.py:296(base)
        1    0.000    0.000    0.000    0.000 function_base.py:9(linspace)
       33    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty_like}
      151    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       19    0.000    0.000    0.000    0.000 integers.py:20(eval)
       23    0.000    0.000    0.000    0.000 type_check.py:141(imag)
       60    0.000    0.000    0.000    0.000 power.py:870(<lambda>)
       60    0.000    0.000    0.000    0.000 logic.py:89(fuzzy_bool)
       13    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
      172    0.000    0.000    0.000    0.000 numbers.py:3263(__eq__)
      128    0.000    0.000    0.000    0.000 evalf.py:1268(<lambda>)
        3    0.000    0.000    0.000    0.000 type_check.py:237(iscomplexobj)
      149    0.000    0.000    0.000    0.000 numbers.py:1898(as_coeff_Mul)
       44    0.000    0.000    0.000    0.000 numbers.py:1130(_as_mpf_op)
       78    0.000    0.000    0.000    0.000 boolalg.py:318(__hash__)
      243    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 libelefun.py:233(pi_fixed)
        5    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
      134    0.000    0.000    0.000    0.000 numbers.py:2038(__int__)
        1    0.000    0.000    0.000    0.000 impurityModel.py:1935(<dictcomp>)
       14    0.000    0.000    0.000    0.000 {method 'conjugate' of 'numpy.generic' objects}
       39    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       10    0.000    0.000    0.000    0.000 numbers.py:3260(__hash__)
       29    0.000    0.000    0.000    0.000 {_bisect.bisect}
       77    0.000    0.000    0.000    0.000 numbers.py:1571(_hashable_content)
       23    0.000    0.000    0.000    0.000 numeric.py:484(asanyarray)
       44    0.000    0.000    0.000    0.000 numbers.py:1160(_eval_is_zero)
      7/1    0.000    0.000    0.000    0.000 libelefun.py:211(bs_chudnovsky)
        6    0.000    0.000    0.000    0.000 numeric.py:1835(array_str)
       29    0.000    0.000    0.000    0.000 generate.py:80(extend)
       13    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        3    0.000    0.000    0.000    0.000 fromnumeric.py:828(argsort)
       13    0.000    0.000    0.000    0.000 _abcoll.py:548(update)
        6    0.000    0.000    0.000    0.000 arrayprint.py:340(array2string)
        3    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.arange}
       61    0.000    0.000    0.000    0.000 power.py:300(exp)
       20    0.000    0.000    0.000    0.000 sympify.py:13(__init__)
       62    0.000    0.000    0.000    0.000 numbers.py:1577(_eval_is_zero)
       40    0.000    0.000    0.000    0.000 factor_.py:719(done)
       78    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
        1    0.000    0.000    0.000    0.000 function.py:63(_coeff_isneg)
       22    0.000    0.000    0.000    0.000 boolalg.py:406(<lambda>)
        3    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {issubclass}
       10    0.000    0.000    0.000    0.000 complexes.py:52(eval)
       10    0.000    0.000    0.000    0.000 complexes.py:148(eval)
       51    0.000    0.000    0.000    0.000 boolalg.py:313(__nonzero__)
        1    0.000    0.000    0.000    0.000 rsptt.py:890(dc_MLFT)
        1    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
        3    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       50    0.000    0.000    0.000    0.000 numbers.py:634(_eval_is_finite)
        6    0.000    0.000    0.000    0.000 {_functools.reduce}
       16    0.000    0.000    0.000    0.000 {method 'iteritems' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 _iotools.py:31(_is_string_like)
       10    0.000    0.000    0.000    0.000 numbers.py:3253(_as_mpf_val)
        3    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        2    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
       11    0.000    0.000    0.000    0.000 numbers.py:1574(_eval_is_positive)
        3    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.result_type}
        3    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       10    0.000    0.000    0.000    0.000 evalf.py:1266(<lambda>)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
       12    0.000    0.000    0.000    0.000 logic.py:148(fuzzy_not)
        2    0.000    0.000    0.000    0.000 numbers.py:1580(__neg__)
       10    0.000    0.000    0.000    0.000 boolalg.py:376(__nonzero__)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        2    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
        3    0.000    0.000    0.000    0.000 arrayprint.py:34(product)
        1    0.000    0.000    0.000    0.000 {getattr}
        1    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


